{% set node = node[ansible_hostname] %}
{% if node.interfaces is defined %}
{%   set intvars = node.interfaces %}
{% endif %}
{% if node.quagga is defined %}
{%   set quaggavars = node.quagga %}
{% endif %}
{% if global.quagga is defined %}
{%   set globalquaggavars = global.quagga %}
{% endif %}
{% if node.BGP is defined %}
{%   set bgpvars = node.BGP %}
{% endif %}
{% if global.prefix_lists is defined %}
{%   set globallists = global.prefix_lists -%}
{% endif %}
{% if node.prefix_lists is defined %}
{%   set nodelists = node.prefix_lists -%}
{% endif %}
{% if global.route_maps is defined %}
{%   set globalmaps = global.route_maps -%}
{% endif %}
{% if node.route_maps is defined %}
{%   set nodemaps = node.route_maps -%}
{% endif %}
{% if node.static_routes is defined %}
{%   set statics = node.static_routes -%}
{% endif %}
!
{% if quaggavars is defined %}
{%    if quaggavars.log_file is defined %}
log file {{quaggavars.log_file}}
{%    elif globalquaggavars.log_file %}
log file {{globalquaggavars.log_file}}
{%    else %}
log file /var/log/quagga/quagga.log
{%    endif %}
{%endif %}
username cumulus nopassword
!
service password-encryption
service integrated-vtysh-config
!
{% if quaggavars is defined %}
{%    if quaggavars.enable_password is defined %}
enable password 8 {{quaggavars.enable_password}}
{%    elif globalquaggavars.enable_password is defined %}
enable password 8 {{globalquaggavars.enable_password}}
{%    else %}
enable password 8 EI3shB8./Ozus
{%    endif %}
{%    if quaggavars.readonly_password is defined %}
password 8 {{quaggavars.readonly_password}}
{%    elif globalquaggavars.readonly_password is defined %}
password 8 {{globalquaggavars.readonly_password}}
{%    else %}
password 8 mOmF4Kx3/N4Rs
{%    endif %}
{%endif %}
!
{#######  BGP configuration #######}
{% if bgpvars is defined %}
{% if bgpvars.asn is defined %}
router bgp {{ bgpvars.asn }}
 bgp router-id {{ intvars.loopback.ipv4|replace("/32", "") }}
 bgp bestpath as-path multipath-relax
{### Add aggregate addresses and network statements ###}
{% if bgpvars.aggregates is defined -%}
{% for aggregate in bgpvars.aggregates -%}
 aggregate-address {{aggregate}} summary-only
{% endfor %}
{% endif -%}
{% if bgpvars.peer_groups is defined %}
{% for groupname in bgpvars.peer_groups %}
{%    if groupname == "fabric" %}
 neighbor fabric peer-group
 neighbor fabric remote-as external
{%       if bgpvars.peer_groups[groupname].description is defined %}
 neighbor fabric description {{ bgpvars.peer_groups[groupname].description}}
{%       else %}
 neighbor fabric description Internal Fabric Network
{%       endif %}
 neighbor fabric capability extended-nexthop
{%       for neighbor in bgpvars.peer_groups[groupname].interfaces %}
 neighbor {{ neighbor }} interface v6only peer-group fabric
{%       endfor %}
{### All other BGP peergroups ###}
{%    else %}
 neighbor {{groupname}} peer-group
{### Set the peergroup remote ASN valid options number, "external", "internal" ###}
{%       if bgpvars.peer_groups[groupname].remote_as is defined %}
 neighbor {{groupname}} remote-as {{bgpvars.peer_groups[groupname].remote_as}}
{%       else %}
 neighbor {{groupname}} remote-as external
{%       endif %}
{%       if bgpvars.peer_groups[groupname].description is defined %}
 neighbor {{groupname}} description {{ bgpvars.peer_groups[groupname].description}}
{%       endif %}
{%       if bgpvars.peer_groups[groupname].prefix_list_in is defined %}
 neighbor {{groupname}} prefix-list {{ bgpvars.peer_groups[groupname].prefix_list_in}} in
{%       endif %}
{%       if bgpvars.peer_groups[groupname].prefix_list_out is defined %}
 neighbor {{groupname}} prefix-list {{ bgpvars.peer_groups[groupname].prefix_list_out}} out
{%       endif %}
{%       if bgpvars.peer_groups[groupname].route_map_in is defined %}
 neighbor {{groupname}} route-map {{ bgpvars.peer_groups[groupname].route_map_in}} in
{%       endif %}
{%       if bgpvars.peer_groups[groupname].route_map_out is defined %}
 neighbor {{groupname}} route-map {{ bgpvars.peer_groups[groupname].route_map_out}} out
{%       endif %}
{%       if bgpvars.peer_groups[groupname].maximum_prefix is defined %}
 neighbor {{groupname}} maximum-prefix {{ bgpvars.peer_groups[groupname].maximum_prefix}}
{%       endif %}
{%       if bgpvars.peer_groups[groupname].remove_private_AS is defined %}
{%          if bgpvars.peer_groups[groupname].remove_private_AS == "replace-as" %}
 neighbor {{groupname}} remove-private-AS replace-AS
{%          else %}
 neighbor {{groupname}} remove-private-AS all
{%          endif %}
{%       endif %}
{%       if bgpvars.peer_groups[groupname].soft_reconfiguration is defined and bgpvars.peer_groups[groupname].soft_reconfiguration == "enable" %}
 neighbor {{groupname}} soft-reconfiguration inbound
{%       endif %}
{%       if bgpvars.peer_groups[groupname].password is defined %}
 neighbor {{groupname}} password {{bgpvars.peer_groups[groupname].password}}
{%       endif %}
{%       for neighbor in bgpvars.peer_groups[groupname].peers %}
 neighbor {{ neighbor }} peer-group {{groupname}}
{%       endfor %}
{%    endif %}
{% endfor -%}
{% endif -%}
!
 address-family ipv4 unicast
{% for groupname in bgpvars.peer_groups -%}
{% if groupname == "fabric" %} 
  neighbor fabric activate
{% elif bgpvars.peer_groups[groupname].address_family_ipv4 is defined and bgpvars.peer_groups[groupname].address_family_ipv4 == "enable" %}
  neighbor {{groupname}} activate
{% endif %}
{% endfor %}
{% if bgpvars.redistribute_connected_ipv4 is defined -%}
{%   if bgpvars.redistribute_connected_ipv4 == none %}
  redistribute connected
{%   else %}
  redistribute connected route-map {{bgpvars.redistribute_connected_ipv4}}
{%   endif -%}
{% endif -%}
  maximum-paths 64
{% if bgpvars.ipv4_networks is defined -%}
{% for v4net in bgpvars.ipv4_networks %}
  network {{v4net}}
{% endfor -%}
{% endif -%}
 exit-address-family
!
 address-family ipv6 unicast
{% for groupname in bgpvars.peer_groups %}
{% if groupname == "fabric" %}
  neighbor fabric activate
{% elif bgpvars.peer_groups[groupname].address_family_ipv6 is defined and bgpvars.peer_groups[groupname].address_family_ipv6 == "enable" %}
  neighbor {{groupname}} activate
{% endif %}
{% endfor %}
{% if bgpvars.ipv6_networks is defined -%}
{% for v6net in bgpvars.ipv6_networks %}
  network {{v6net}}
{% endfor -%}
{% endif -%}
{% if bgpvars.redistribute_connected_ipv6 is defined -%}
{%   if bgpvars.redistribute_connected_ipv6 == none %}
  redistribute connected
{%   else %}
  redistribute connected route-map {{bgpvars.redistribute_connected_ipv6}}
{%   endif -%}
{% endif -%}
 exit-address-family
{% endif %}
{% endif %}
{#######  END BGP configuration #######}
!
{### Configure node specific prefix lists ###} 
{% if nodelists is defined %}
{%   for list_name in nodelists -%}
{%     for item in nodelists[list_name] -%}
{% set ip, rule = item.split(' ',1) %}
{{ip}} prefix-list {{list_name}} seq {{rule}}
{%     endfor %}
{%   endfor %}
{% endif %}
!
{### Configure global prefix lists ###}
{% if globallists is defined %}
{%   for list_name in globallists -%}
{### Check if a node specific list exisits if so skip ###}
{%     if nodelists is defined and nodelists.list_name is defined %}
{%     else %}
{%       for item in globallists[list_name] -%}
{% set ip, rule = item.split(' ',1) %}
{{ip}} prefix-list {{list_name}} seq {{rule}}
{%       endfor %}
{%     endif %} 
{%   endfor %}
{% endif %}
!
{### Configure node specific route-maps ###}
{% if nodemaps is defined %}
{%   for map_name in nodemaps -%}
{%     for item in nodemaps[map_name] -%}
{{item}}
{%     endfor %}
{%   endfor %}
{% endif %}
!
{### Configure global route-maps ###}
{% if globalmaps is defined %}
{%   for map_name in globalmaps -%}
{### Check if a node specific route_map exisits if so skip ###}
{%     if nodemaps is defined and nodemaps.map_name is defined %}
{%     else %}
{%       for item in globalmaps[map_name] -%}
{{item}}
{%       endfor %}
{%     endif %}
{%   endfor %}
{% endif %}
!
{### Configure static routes ###}
{% if statics is defined %}
{%   for item in statics -%}
{{item}} 
{%   endfor %}
{% endif %}
!
ip forwarding
ipv6 forwarding
!
line vty
!
end
